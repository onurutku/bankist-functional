{"mappings":"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","sources":["script.js"],"sourcesContent":["'use strict';\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// BANKIST APP\nlet minute = 1;\nlet sec = 0;\n// Data\nconst account1 = {\n  owner: 'Onur Utku Topaloglu',\n  movements: [200, 450, -400, 3000, -650, -130, 70, 1300],\n  interestRate: 1.2, // %\n  pin: 1111,\n};\n\nconst account2 = {\n  owner: 'Jessica Davis',\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\n  interestRate: 1.5,\n  pin: 2222,\n};\n\nconst account3 = {\n  owner: 'Steven Thomas Williams',\n  movements: [200, -200, 340, -300, -20, 50, 400, -460],\n  interestRate: 0.7,\n  pin: 3333,\n};\n\nconst account4 = {\n  owner: 'Sarah Smith',\n  movements: [430, 1000, 700, 50, 90],\n  interestRate: 1,\n  pin: 4444,\n};\nconst account5 = {\n  owner: 'Onur Utku',\n  movements: [430, 1000, 700, 50, 90],\n  interestRate: 1,\n  pin: 5555,\n};\n\nconst accounts = [account1, account2, account3, account4, account5];\n\n// Elements\nconst labelWelcome = document.querySelector('.welcome');\nconst labelDate = document.querySelector('.date');\nconst labelBalance = document.querySelector('.balance__value');\nconst labelSumIn = document.querySelector('.summary__value--in');\nconst labelSumOut = document.querySelector('.summary__value--out');\nconst labelSumInterest = document.querySelector('.summary__value--interest');\nconst labelTimer = document.querySelector('.timer');\n\nconst containerApp = document.querySelector('.app');\nconst containerrApp = document.getElementById('app');\nconst containerMovements = document.querySelector('.movements');\n\nconst btnLogin = document.querySelector('.login__btn');\nconst btnTransfer = document.querySelector('.form__btn--transfer');\nconst formTransfer = document.querySelector('.form--transfer');\nconst btnLoan = document.querySelector('.form__btn--loan');\nconst btnClose = document.querySelector('.form__btn--close');\nconst btnSort = document.querySelector('.btn--sort');\n\nconst inputLoginUsername = document.querySelector('.login__input--user');\nconst inputLoginPin = document.querySelector('.login__input--pin');\nconst inputTransferTo = document.querySelector('.form__input--to');\nconst inputTransferAmount = document.querySelector('.form__input--amount');\nconst inputLoanAmount = document.querySelector('.form__input--loan-amount');\nconst inputCloseUsername = document.querySelector('.form__input--user');\nconst inputClosePin = document.querySelector('.form__input--pin');\n\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// LECTURES\n\nconst currencies = new Map([\n  ['USD', 'United States dollar'],\n  ['EUR', 'Euro'],\n  ['GBP', 'Pound sterling'],\n]);\n\nconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\n\n/////////////////////////////////////////////////\n\n//---------------------------LOGIN-----------------------------------\nlet currentAccount;\nfunction checkLogin(e) {\n  currentAccount = '';\n  accounts.forEach(account => {\n    if (\n      account.username === inputLoginUsername.value &&\n      account.pin === Number(inputLoginPin.value)\n    ) {\n      currentAccount = account;\n      containerrApp.style.opacity = '1';\n    }\n  });\n  //Movement Display\n  displayMovements(currentAccount.movements);\n  //Calculate Balance\n  calcDisplayBalance(currentAccount.movements);\n  //Calculate the summary\n  calcDisplaySummary(currentAccount.movements, currentAccount.interestRate);\n  //Display Welcome Message\n  welcomeMessage(currentAccount);\n  //Start Timer\n  myLoop();\n  //Clear inputs for next Login\n  inputLoginUsername.value = '';\n  inputLoginPin.value = '';\n  e.preventDefault();\n}\nbtnLogin.addEventListener('click', checkLogin);\n//---------------------------LOGIN------------------------------------\n\n//-------------------------MOVEMENTS-----------------------------------\nconst displayMovements = function (movements) {\n  containerMovements.innerHTML = '';\n  movements.forEach((mov, i) => {\n    let type;\n    if (mov > 0) {\n      type = 'deposit';\n    } else {\n      type = 'withdrawal';\n    }\n    const html = `\n      <div class=\"movements__row\">\n        <div class=\"movements__type movements__type--${type}\">${\n      i + 1\n    } ${type}</div>\n        <div class=\"movements__date\">3 days ago</div>\n        <div class=\"movements__value\">${mov}€</div>\n      </div>\n      `;\n    containerMovements.insertAdjacentHTML('afterbegin', html);\n  });\n};\n//-------------------------MOVEMENTS------------------------------------\n\n//-------------------------USERNAME ADDING-------------------------------\n(function () {\n  accounts.forEach(function (account) {\n    let result = '';\n    account.owner.split(' ').forEach(fullName => {\n      result += fullName.slice(0, 1).toLowerCase();\n    });\n    account.username = result;\n  });\n})();\n//-------------------------USERNAME ADDING-------------------------------\n\n//-------------------------CALCULATE BALANCE-----------------------------\nconst calcDisplayBalance = function (movements) {\n  labelBalance.textContent =\n    movements.reduce(function (acc, current) {\n      return acc + current;\n    }, 0) + ` €`;\n};\n//-------------------------CALCULATE BALANCE-----------------------------\n\n//------------------------CALCULATING SUMMARY--------------------------\nconst calcDisplaySummary = function (movements, rate) {\n  const posIncomes = movements\n    .filter(function (mov) {\n      return mov > 0;\n    })\n    .reduce(function (acc, total) {\n      return acc + total;\n    }, 0);\n  labelSumIn.textContent = posIncomes + `€`;\n  const negIncomes = movements\n    .filter(function (mov) {\n      return mov < 0;\n    })\n    .reduce(function (acc, total) {\n      return acc + total;\n    });\n  labelSumOut.textContent = negIncomes + `€`;\n  const interest = movements\n    .filter(function (mov) {\n      return mov > 0;\n    })\n    .map(function (deposit) {\n      return (deposit * rate) / 100;\n    })\n    .filter(function (int, i, arr) {\n      return int >= 1;\n    })\n    .reduce(function (total, current) {\n      return total + current;\n    }, 0);\n  labelSumInterest.textContent = interest + `€`;\n};\n//------------------------CALCULATING SUMMARY--------------------------\n\n//--------------------------WELCOME MESSAGE----------------------------\nconst welcomeMessage = function (account) {\n  labelWelcome.textContent = `Hello ${account.owner}`;\n};\n//--------------------------WELCOME MESSAGE-----------------------------\n\n//--------------------------TRANSFER OPERATION---------------------------\nbtnTransfer.addEventListener('click', function (e) {\n  e.preventDefault();\n  //-------------------------1.Yöntem Find-------------------------------\n  const transferTo = inputTransferTo.value;\n  const transferValue = Number(inputTransferAmount.value);\n  const tr = accounts.find(function (acc) {\n    return acc.username === transferTo;\n  });\n  if (tr.username !== currentAccount.username && transferValue > 0) {\n    tr.movements.push(transferValue);\n    currentAccount.movements.push(-transferValue);\n  }\n  //-------------------------2.Yöntem ForEach-------------------------------\n  // accounts.forEach(account => {\n  //   if (\n  //     account.username === transferTo &&\n  //     transferTo !== currentAccount.username\n  //   ) {\n  //     account.movements.push(transferValue);\n  //     currentAccount.movements.push(-transferValue);\n  //   }\n  // });\n  inputTransferTo.value = '';\n  inputTransferAmount.value = '';\n});\n//--------------------------TRANSFER OPERATION---------------------------\n\n//----------------------------REQUEST LOAN-------------------------------\nbtnLoan.addEventListener('click', function (e) {\n  e.preventDefault();\n  const requetsAmount = Number(inputLoanAmount.value);\n  if (\n    requetsAmount > 0 &&\n    currentAccount.movements.some(function (so) {\n      return so > requetsAmount * 0.1;\n    })\n  ) {\n    currentAccount.movements.push(requetsAmount);\n  }\n  inputLoanAmount.value = '';\n});\n//----------------------------REQUEST LOAN-------------------------------\n\n//----------------------------CLOSE ACCOUNT------------------------------\nbtnClose.addEventListener('click', function (e) {\n  e.preventDefault();\n  if (\n    currentAccount.username === inputCloseUsername.value &&\n    currentAccount.pin === Number(inputClosePin.value)\n  ) {\n    const index = accounts.indexOf(currentAccount);\n    accounts.splice(index, 1);\n    containerrApp.style.opacity = '0';\n    inputCloseUsername.value = '';\n    inputClosePin.value = '';\n  } else {\n    alert('Wrong \"Username\" or \"Password\" Check them all!');\n  }\n});\n//----------------------------CLOSE ACCOUNT------------------------------\n\n//--------------------------SORTING MOVEMENTS----------------------------\nlet counter = '';\nbtnSort.addEventListener('click', function (e) {\n  e.preventDefault();\n  if (counter === 'sl' || counter === '') {\n    currentAccount.movements.sort(function (a, b) {\n      if (a > b) return 1;\n      if (b > a) return -1;\n    });\n    counter = 'ls';\n  } else if (counter === 'ls') {\n    currentAccount.movements.sort(function (a, b) {\n      if (a > b) return -1;\n      if (b > a) return 1;\n    });\n    counter = 'sl';\n  }\n  displayMovements(currentAccount.movements);\n});\n//--------------------------SORTING MOVEMENTS----------------------------\n\n//-----------------------------DATE AND TIME-----------------------------\n(function () {\n  labelDate.textContent =\n    new Date().getUTCDay() +\n    '/' +\n    new Date().getMonth() +\n    '/' +\n    new Date().getFullYear();\n})();\nfunction myLoop() {\n  setTimeout(function () {\n    labelTimer.textContent = `${minute}:${sec}`;\n    sec--;\n    if (sec >= 0) {\n      myLoop();\n    } else if (minute > 0) {\n      sec = 59;\n      minute--;\n      myLoop();\n    } else {\n      currentAccount = '';\n      containerrApp.style.opacity = '0';\n    }\n  }, 1000);\n}\n\nfunction reset() {\n  minute = 5;\n  sec = 0;\n}\ndocument.body.addEventListener('click', reset);\ndocument.addEventListener('scroll', reset);\ndocument.querySelector('.movements').addEventListener('scroll', reset);\n\n//-----------------------------DATE AND TIME-----------------------------\n"],"names":["minute","sec","account1","owner","movements","interestRate","pin","account2","account3","account4","account5","accounts","labelWelcome","document","querySelector","labelDate","labelBalance","labelSumIn","labelSumOut","labelSumInterest","labelTimer","containerApp","containerrApp","getElementById","containerMovements","btnLogin","btnTransfer","formTransfer","btnLoan","btnClose","btnSort","inputLoginUsername","inputLoginPin","inputTransferTo","inputTransferAmount","inputLoanAmount","inputCloseUsername","inputClosePin","currencies","Map","movements1","currentAccount","checkLogin","e","forEach","account","username","value","Number","style","opacity","displayMovements","calcDisplayBalance","calcDisplaySummary","welcomeMessage","myLoop","preventDefault","addEventListener","innerHTML","mov","i","type","html","insertAdjacentHTML","result","split","fullName","slice","toLowerCase","textContent","reduce","acc","current","rate","posIncomes","filter","total","negIncomes","interest","map","deposit","int","arr","transferTo","transferValue","tr","find","push","requetsAmount","some","so","index","indexOf","splice","alert","reset","counter","sort","a","b","Date","getUTCDay","getMonth","getFullYear"],"version":3,"file":"index.28a8f0c6.js.map"}